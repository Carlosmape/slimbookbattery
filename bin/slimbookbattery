#!/usr/bin/python3
# -*- coding: utf-8 -*-

import argparse
import os
import re
import sys
import subprocess


CURRENT_PATH = os.path.dirname(os.path.realpath(__file__))
TLP = "/usr/bin/tlp"
TLP2 = "/usr/sbin/tlp"
VERSION_REGEX = re.compile(r'\(.*\)')


def main():
    changelog = None
    for candidate_path in ['../changelog', '../debian/changelog']:
        candidate_path = os.path.join(CURRENT_PATH, candidate_path)
        if os.path.exists(candidate_path):
            changelog = candidate_path
            break

    version = 'Unknown'
    if os.path.exists(changelog):
        with open(changelog, 'r') as f:
            content = f.read()
        version_list = VERSION_REGEX.findall(content)
        if version_list:
            version = version_list[0]

    parser = argparse.ArgumentParser(
        description='Slimbook Battery Commandline Interface:\n'
                    'For support go to: https://github.com/slimbook/slimbookbattery'
    )
    parser.add_argument('-v', '--version', action='store_true', help='application version')

    args = parser.parse_args()
    if args.version:
        sys.stdout.write('Slimbook Battery {}\n'.format(version))
        exit(0)

    if not (os.path.exists(TLP) or os.path.exists(TLP2)):
        sys.stderr.write("Slimbook Battery requires TLP\n")
        exit(1)

    pgrep = subprocess.getoutput("pgrep slimbookbatterypreferences")
    num_proc_running = pgrep.split('\n')
    if len(num_proc_running) > 1:
        sys.stdout.write("Slimbook Battery is in execution\n")
    else:
        preference_py = os.path.join(CURRENT_PATH, '../src/slimbookbatterypreferences.py')
        os.system('python3 {}'.format(preference_py))


if __name__ == "__main__":
    main()
